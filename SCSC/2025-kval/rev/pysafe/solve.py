import z3

s = z3.Solver()

f = [z3.BitVec(f"f{i}", 8) for i in range(17)]

asserts = """
assert f[13]+198+f[8]+21+f[12]+249+f[15]+156+f[6]+184==f[9]+72+f[3]+72+f[4]+129+f[3]+159+f[10]+38-192
assert f[3]+242+f[13]+182+f[6]+162+f[14]+245+f[1]+134==f[2]+8+f[0]+205+f[10]+253+f[10]+125+f[6]+33-162
assert f[7]+114+f[14]+73+f[2]+47+f[16]+164+f[3]+251==f[9]+155+f[10]+64+f[9]+105+f[2]+228+f[10]+198--199
assert f[9]+124+f[6]+95+f[1]+96+f[15]+134+f[2]+36==f[4]+67+f[2]+20+f[16]+201+f[16]+142+f[6]+121-176
assert f[8]+215+f[15]+231+f[2]+183+f[3]+167+f[10]+250==f[7]+98+f[8]+9+f[7]+60+f[5]+191+f[13]+171--18
assert f[3]+32+f[7]+75+f[2]+24+f[3]+14+f[3]+97==f[2]+201+f[3]+190+f[0]+19+f[5]+100+f[15]+64--152
assert f[1]+108+f[13]+12+f[8]+52+f[7]+36+f[9]+37==f[13]+180+f[1]+93+f[1]+240+f[12]+52+f[8]+103-34
assert f[15]+184+f[6]+87+f[5]+30+f[10]+83+f[3]+129==f[5]+227+f[15]+7+f[16]+210+f[11]+160+f[8]+199-33
assert f[0]+79+f[2]+235+f[1]+172+f[4]+144+f[15]+123==f[9]+181+f[4]+184+f[12]+159+f[2]+213+f[6]+1-41
assert f[5]+172+f[7]+123+f[12]+230+f[1]+213+f[13]+206==f[5]+24+f[2]+229+f[5]+133+f[16]+229+f[0]+250-15
assert f[15]+20+f[9]+167+f[1]+240+f[6]+213+f[4]+43==f[12]+8+f[10]+214+f[6]+2+f[0]+8+f[6]+51--64
assert f[6]+61+f[8]+155+f[3]+94+f[12]+244+f[0]+42==f[14]+141+f[8]+60+f[16]+69+f[3]+178+f[8]+80--51
assert f[1]+10+f[6]+21+f[10]+133+f[1]+188+f[14]+254==f[11]+223+f[6]+92+f[9]+193+f[4]+5+f[8]+78-13
assert f[10]+171+f[2]+189+f[1]+174+f[8]+22+f[4]+84==f[11]+149+f[4]+203+f[3]+151+f[7]+245+f[9]+25-197
assert f[16]+92+f[9]+37+f[10]+207+f[13]+154+f[3]+56==f[15]+247+f[10]+173+f[15]+64+f[15]+60+f[1]+219--115
assert f[10]+155+f[5]+80+f[2]+193+f[2]+34+f[7]+102==f[12]+32+f[3]+5+f[16]+202+f[14]+149+f[6]+251--132
assert f[2]+217+f[7]+189+f[5]+134+f[6]+221+f[3]+184==f[0]+33+f[6]+232+f[15]+61+f[8]+204+f[1]+107-0
assert f[4]+111+f[6]+54+f[12]+235+f[4]+186+f[15]+54==f[12]+76+f[16]+217+f[10]+254+f[15]+256+f[7]+104-146
assert f[10]+5+f[10]+163+f[16]+19+f[8]+76+f[12]+80==f[15]+151+f[2]+34+f[2]+21+f[4]+116+f[9]+21--12
assert f[14]+8+f[5]+170+f[14]+77+f[16]+191+f[16]+196==f[2]+18+f[13]+40+f[9]+106+f[15]+214+f[7]+199-31
assert f[0]+11+f[9]+94+f[10]+131+f[15]+34+f[9]+135==f[12]+209+f[1]+197+f[4]+84+f[9]+123+f[1]+172-76
assert f[15]+19+f[4]+214+f[2]+252+f[11]+78+f[1]+211==f[12]+239+f[1]+235+f[15]+52+f[0]+78+f[4]+17-124
assert f[3]+166+f[6]+178+f[15]+197+f[1]+57+f[10]+240==f[9]+64+f[12]+66+f[3]+151+f[1]+97+f[14]+201--14
assert f[6]+191+f[11]+234+f[1]+39+f[15]+21+f[0]+131==f[7]+111+f[16]+48+f[16]+216+f[3]+157+f[13]+75--143
assert f[2]+217+f[13]+54+f[3]+33+f[4]+213+f[14]+16==f[13]+221+f[15]+16+f[8]+167+f[11]+41+f[3]+37-155
assert f[0]+184+f[11]+177+f[0]+92+f[11]+119+f[4]+37==f[0]+107+f[3]+105+f[9]+4+f[0]+189+f[4]+120-60
assert f[14]+96+f[15]+58+f[8]+177+f[0]+67+f[11]+107==f[15]+172+f[9]+150+f[5]+168+f[3]+42+f[5]+158-29
assert f[4]+193+f[7]+65+f[16]+162+f[7]+125+f[9]+95==f[13]+191+f[4]+24+f[12]+11+f[2]+40+f[13]+68--60
assert f[13]+154+f[13]+73+f[11]+153+f[7]+44+f[11]+228==f[12]+30+f[0]+210+f[10]+214+f[6]+226+f[9]+191--86
assert f[2]+242+f[3]+95+f[3]+142+f[14]+79+f[5]+205==f[13]+216+f[7]+90+f[10]+233+f[11]+73+f[2]+237--114
assert f[6]+248+f[0]+151+f[14]+230+f[6]+4+f[3]+153==f[4]+155+f[15]+218+f[15]+48+f[12]+119+f[0]+144-17
assert f[8]+62+f[0]+21+f[12]+132+f[14]+203+f[8]+53==f[9]+182+f[2]+101+f[2]+19+f[9]+135+f[3]+175-130
"""
for line,a in enumerate(asserts.strip().splitlines(), 7):
	lhs,rhs = a.split(" ")[1].split("==")

	lhs = [f[int(term[2:-1])] if "f" in term else int(term) for term in lhs.split("+")]
	lhs2 = lhs[0]
	for l in lhs[1:]:
		lhs2 = (lhs2 ^ l) + line
	rhs,rlast = rhs.split("-", 1)
	rhs = [f[int(term[2:-1])] if "f" in term else int(term) for term in rhs.split("+")]
	rhs2 = rhs[0]
	for r in rhs[1:]:
		rhs2 = (rhs2 ^ r) + line

	rhs2 = rhs2 + int(rlast)

	s.add(lhs2 == rhs2)

print(s.check())

m = s.model()

print("".join(chr(m[f].as_long()) for f in f))
