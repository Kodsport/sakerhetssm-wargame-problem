import re
import ecdsa
import hashlib

gen = ecdsa.NIST256p.generator
order = int(gen.order())

def H(m):
    return int.from_bytes(hashlib.sha256(m).digest(), 'big') % order

(r1, s1) = (75500473885933440102349250800371371719844218835306589569739362373352510711748, 16024164171116223134077765902232407130958988685148352157522953597450963414049)
(r2, s2) = (75500473885933440102349250800371371719844218835306589569739362373352510711748, 4694071681235633686740348059417161949764482691159381333680771208497833303204)

h1, h2 = H(b':)'), H(b':O')

k = (h1-h2)*pow(s1-s2, -1, order) % order
d = (s1*k - h1)*pow(r1, -1, order) % order

raw = d.to_bytes(32, 'big')
print(re.findall(b'SNHT{.*}', raw)[0].decode())