from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives.asymmetric import padding
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.backends import default_backend

# Example usage
private_exponent = 572581816574039738483163558423994199859381699042350204535130401961970753147188441218107382373310827774880121334553647022501173090796551449768214281080321559930915110976832888979822803776188230943700599065341246567284058070815150593
n = 1151365197373982644236962755536122602975708714105869702829493162536256665715736649242485994066018400830949880703934848395177339877199866781403006534174711290006290029727421199960637755565017097839979000085389892902668271293717604037
e = 65537
message = "a".encode()
print(message)
emessage = int.from_bytes(message, "big")
print(emessage)
cipher = pow(emessage, e, n)
print(cipher)
